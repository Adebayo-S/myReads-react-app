{"version":3,"sources":["BooksAPI.js","components/Book.js","components/HomePage.js","components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","props","moveBook","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","e","target","disabled","title","authors","HomePage","_this","this","filter","map","components_Book","key","Link","to","React","Component","Search","state","searchedBooks","errMsg","handleQuery","_callee","searchResult","foundBooks","regenerator_default","wrap","_context","prev","next","setState","BooksAPI","sent","error","foundBook","stop","_this2","type","placeholder","length","BooksApp","asyncToGenerator","mark","catch","err","console","log","_this3","Route","exact","path","render","components_HomePage","components_Search","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4158a7e1.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Book = (props) => {\r\n\r\n  const { book, moveBook } = props;\r\n\r\n  return (\r\n    <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n            <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: book.imageLinks\r\n                  ? `url(${book.imageLinks.thumbnail})`\r\n                  : \"\"\r\n              }}\r\n            ></div>\r\n            <div className=\"book-shelf-changer\">\r\n              <select\r\n                value={book.shelf ? book.shelf : 'none'}\r\n                onChange={(e) => moveBook(book, e.target.value)}\r\n              >\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"book-title\">{book.title}</div>\r\n          <div className=\"book-authors\">\r\n            {book.authors}\r\n          </div>\r\n        </div>\r\n      </li>\r\n  )\r\n}\r\n\r\nBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  moveBook: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Book\r\n","import React from 'react'\r\nimport Book from './Book'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass HomePage extends React.Component {\r\n  static propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    moveBook: PropTypes.func.isRequired,\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {this.props.books\r\n                    .filter((book) => book.shelf === 'currentlyReading')\r\n                    .map((book) => (\r\n                      <Book\r\n                        book={book}\r\n                        key={book.id}\r\n                        moveBook={this.props.moveBook}\r\n                      />\r\n                    ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {this.props.books\r\n                    .filter((book) => book.shelf === 'wantToRead')\r\n                    .map((book) => (\r\n                      <Book\r\n                        book={book}\r\n                        key={book.id}\r\n                        moveBook={this.props.moveBook}\r\n                      />\r\n                    ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {this.props.books\r\n                    .filter((book) => book.shelf === 'read')\r\n                    .map((book) => (\r\n                      <Book\r\n                        book={book}\r\n                        key={book.id}\r\n                        moveBook={this.props.moveBook}\r\n                      />\r\n                    ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <button>Add a book</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Book from './Book'\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from '../BooksAPI'\r\n\r\nclass Search extends React.Component {\r\n\r\n    static propTypes = {\r\n        books: PropTypes.array.isRequired,\r\n        moveBook: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        query: '',\r\n        searchedBooks: [],\r\n        errMsg: ''\r\n    }\r\n\r\n    handleQuery = async (query) => {\r\n        this.setState({ query: query });\r\n\r\n        let searchResult = await BooksAPI.search(this.state.query);\r\n\r\n        if (searchResult && !searchResult.error) {\r\n            let foundBooks = searchResult.map(foundBook => {\r\n                this.props.books.map(book => {\r\n                    if (book.id === foundBook.id) {\r\n                        foundBook.shelf = book.shelf;\r\n                    }\r\n                })\r\n                return foundBook;\r\n            })\r\n            this.setState({ searchedBooks: foundBooks });\r\n        }\r\n        else {\r\n            const errMsg = `\"${this.state.query}\" could not be found in the library.\r\n                Please try again with a different query.`;\r\n            this.setState({ searchedBooks: [], errMsg: errMsg });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { moveBook } = this.props\r\n        const { query } = this.state\r\n\r\n\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link className=\"close-search\" to=\"/\">Close</Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by title or author\"\r\n                        value={query}\r\n                        onChange={(e) => this.handleQuery(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.state.searchedBooks.length > 0\r\n                            ? this.state.searchedBooks.map(book => (\r\n                                <Book\r\n                                    book={book}\r\n                                    key={book.id}\r\n                                    moveBook={moveBook}\r\n                                />))\r\n                            : <li>{this.state.errMsg}</li>\r\n                        }\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport { Route } from 'react-router-dom'\r\nimport './App.css'\r\nimport HomePage from './components/HomePage'\r\nimport Search from './components/Search'\r\n\r\nclass BooksApp extends React.Component {\r\n\r\n  state = {\r\n    books: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books })\r\n    })\r\n  }\r\n\r\n  moveBook = (book, shelf) => {\r\n    BooksAPI.update(book, shelf).then(async () => {\r\n      const books = await BooksAPI.getAll()\r\n      this.setState(() => {\r\n        return { books: books }\r\n      })}\r\n    ).catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"app\">\r\n          <Route exact path=\"/\" render={() => (\r\n            <HomePage\r\n              books={this.state.books}\r\n              moveBook={this.moveBook} />\r\n          )} />\r\n\r\n          <Route path=\"/search\" render={() => (\r\n            <Search\r\n              books={this.state.books}\r\n              moveBook={this.moveBook} />\r\n          )} />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}